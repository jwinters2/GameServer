apiVersion: networking.k8s.io/v1
kind: Ingress

metadata:
  name: gameserver-ingress
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/from-to-www-redirect: true"
    kubernetes.io/ingress.allow-http: "false"
    nginx.ingress.kubernetes.io/ssl-passthrough: "true"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/secure-backends: "true"
    #nginx.org/websocket-services: "gameserver-websocket-service"
    #nginx.ingress.kubernetes.io/websocket-services: "gameserver-websocket-service"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
    #nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    #nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    #nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"

spec:
  tls:
  - hosts:
    - www.jameswinters.net
    - jameswinters.net
    secretName: gameserver-tls
  rules:
  - host: www.jameswinters.net
    http:
      paths:
      - path: "/gameserver/"
        pathType: Prefix
        backend:
          service:
            name: gameserver-service
            port:
              number: 8082

---

apiVersion: v1
kind: Service

metadata:
  name: gameserver-service

spec:
  type: ClusterIP
  ports:
  - protocol: "TCP"
    port: 8082
    targetPort: 8443
  selector:
    app: gameserver-app

---

apiVersion: v1
kind: Service

metadata:
  name: gameserver-websocket-service

spec:
  type: ClusterIP
  ports:
  - port: 8082
    targetPort: 8443
  selector:
    app: gameserver-app

---

apiVersion: apps/v1
kind: Deployment

metadata:
  name: gameserver-deployment

spec:
  replicas: 1
  selector:
    matchLabels:
      app: gameserver-app
  template:

    metadata:
      labels:
        app: gameserver-app

    spec:
      containers:
      - name: gameserver-tomcat
        image: registry.jameswinters.net/tomcat-prod:latest
        ports:
        - containerPort: 8080
        - containerPort: 8443
        - containerPort: 5432
        imagePullPolicy: Always
        volumeMounts:
        - name: tls-key
          mountPath: "/keys"
          readOnly: true

      imagePullSecrets:
      - name: regcred

      volumes:
      - name: tls-key
        secret:
          secretName: gameserver-tls
          optional: true

--- 

apiVersion: apps/v1
kind: Deployment

metadata:
  name: gameserver-deployment-test

spec:
  replicas: 1
  selector:
    matchLabels:
      app: gameserver-app-test
  template:

    metadata:
      labels:
        app: gameserver-app-test

    spec:
      containers:
      - name: hello-deployment
        image: nginxdemos/hello
        ports:
        - containerPort: 80
